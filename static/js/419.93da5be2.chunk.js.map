{"version":3,"file":"static/js/419.93da5be2.chunk.js","mappings":"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","sources":["components/GamePieces/GamePieces.styled.jsx","components/GamePieces/GamePieces.jsx","components/GameState/GameState.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/game/selectors.js","components/GameState/GameState.jsx","pages/Game.stayled.jsx","pages/Game.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\tposition: relative;\n`;\nexport const Text = styled.p`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tfont-size: 32px;\n\tcolor: #64b5f6;\n`;\n\nexport const GameCanvas = styled.canvas`\n\tbackground-color: #ecf0f1;\n\tborder: 2px solid #90caf9;\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n\tGameCanvas,\n\tText,\n\tWrapper,\n} from \"./GamePieces.styled\";\n\nconst GamePieces = ({ score, setScore, onGameOver }) => {\n\tconst [pause, setPause] = useState(false);\n\tconst canvasRef = useRef();\n\tconst SNAKE_SPEED = 10;\n\tconst [apple, setApple] = useState({ x: 180, y: 100 });\n\tconst [snake, setSnake] = useState([\n\t\t{ x: 100, y: 50 },\n\t\t{ x: 95, y: 50 },\n\t]);\n\tconst [direction, setDirection] = useState(null);\n\tconst [speed, setSpeed] = useState(100);\n\tconst [count, setCount] = useState(10);\n\n\tif (count === score) {\n\t\tlet i = speed - 10;\n\t\tsetCount(+10);\n\t\tsetSpeed(i);\n\t}\n\tuseEffect(() => {\n\t\tconst canvas = canvasRef.current;\n\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\tconst newWindow = callBeck => {\n\t\t\twindow.addEventListener(\"keydown\", callBeck);\n\t\t};\n\n\t\tconst removeWindow = callBeck => {\n\t\t\twindow.removeEventListener(\"keydown\", callBeck);\n\t\t};\n\n\t\tconst takeBreak = e => {\n\t\t\tif (e.key === \" \") {\n\t\t\t\tsetPause(!pause);\n\n\t\t\t\tsetDirection(null);\n\t\t\t}\n\t\t};\n\n\t\tnewWindow(takeBreak);\n\n\t\tconst drawSnake = () => {\n\t\t\tsnake.forEach(snakePart => {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(snakePart.x, snakePart.y, 14, 14);\n\t\t\t\tctx.fillStyle = \"#90ee90\";\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\t\t\t});\n\t\t};\n\n\t\tconst draftApple = () => {\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(apple.x, apple.y, 14, 14);\n\t\t\tctx.fillStyle = \"#ff0000\";\n\t\t\tctx.fill();\n\t\t\tctx.closePath();\n\t\t};\n\n\t\tconst moveSnake = () => {\n\t\t\tif (direction) {\n\t\t\t\tsetSnake(prevSnake => {\n\t\t\t\t\tconst newSnake = [...prevSnake];\n\t\t\t\t\tconst snakeHead = {\n\t\t\t\t\t\tx: newSnake[0].x,\n\t\t\t\t\t\ty: newSnake[0].y,\n\t\t\t\t\t};\n\t\t\t\t\tfor (let i = newSnake.length - 1; i > 0; i--) {\n\t\t\t\t\t\tnewSnake[i].x = newSnake[i - 1].x;\n\t\t\t\t\t\tnewSnake[i].y = newSnake[i - 1].y;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (direction) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\tsnakeHead.x += SNAKE_SPEED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\t\tsnakeHead.x -= SNAKE_SPEED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"up\":\n\t\t\t\t\t\t\tsnakeHead.y -= SNAKE_SPEED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"down\":\n\t\t\t\t\t\t\tsnakeHead.y += SNAKE_SPEED;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnewSnake[0] = snakeHead;\n\t\t\t\t\thandleAppleCollision(newSnake);\n\t\t\t\t\thandleWallCollision(snakeHead);\n\t\t\t\t\thandleBodyCollision(newSnake);\n\n\t\t\t\t\treturn newSnake;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst handleWallCollision = snakeHead => {\n\t\t\tif (\n\t\t\t\tsnakeHead.x + SNAKE_SPEED > canvas.width ||\n\t\t\t\tsnakeHead.x + SNAKE_SPEED < 0\n\t\t\t) {\n\t\t\t\tonGameOver(\"wall\");\n\t\t\t}\n\t\t\tif (\n\t\t\t\tsnakeHead.y + SNAKE_SPEED > canvas.height ||\n\t\t\t\tsnakeHead.y < 0\n\t\t\t) {\n\t\t\t\tonGameOver(\"wall\");\n\t\t\t}\n\t\t};\n\n\t\tconst handleBodyCollision = newSnake => {\n\t\t\tconst snakeHead = newSnake[0];\n\t\t\tfor (let i = 1; i < newSnake.length; i++) {\n\t\t\t\tif (\n\t\t\t\t\tsnakeHead.x === newSnake[i].x &&\n\t\t\t\t\tsnakeHead.y === newSnake[i].y\n\t\t\t\t) {\n\t\t\t\t\tonGameOver(\"self\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst handleAppleCollision = newSnake => {\n\t\t\tconst snakeHead = newSnake[0];\n\n\t\t\tif (\n\t\t\t\tsnakeHead.x === apple.x &&\n\t\t\t\tsnakeHead.y === apple.y\n\t\t\t) {\n\t\t\t\tsetScore(++score);\n\n\t\t\t\tsetApple({\n\t\t\t\t\tx:\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t(Math.random() * canvas.width) / SNAKE_SPEED,\n\t\t\t\t\t\t) * SNAKE_SPEED,\n\t\t\t\t\ty:\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t(Math.random() * canvas.height) / SNAKE_SPEED,\n\t\t\t\t\t\t) * SNAKE_SPEED,\n\t\t\t\t});\n\n\t\t\t\tnewSnake.push({\n\t\t\t\t\tx: newSnake[newSnake.length - 1].x,\n\t\t\t\t\ty: newSnake[newSnake.length - 1].y,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst handleKeyPress = e => {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tsetDirection(\"right\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tsetDirection(\"left\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\tsetDirection(\"up\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tsetDirection(\"down\");\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\tnewWindow(handleKeyPress);\n\t\tif (!pause) {\n\t\t\tconst intervale = setInterval(() => {\n\t\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\tdrawSnake();\n\t\t\t\tdraftApple();\n\t\t\t\tmoveSnake();\n\t\t\t}, speed);\n\n\t\t\treturn () => {\n\t\t\t\tclearInterval(intervale);\n\t\t\t};\n\t\t}\n\t\treturn () => {\n\t\t\tremoveWindow(handleKeyPress);\n\t\t\tremoveWindow(takeBreak);\n\t\t};\n\t}, [\n\t\tapple,\n\t\tdirection,\n\t\tonGameOver,\n\t\tpause,\n\t\tscore,\n\t\tsetScore,\n\t\tsnake,\n\t\tspeed,\n\t]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{pause && <Text>pause</Text>}\n\t\t\t<GameCanvas\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={750}\n\t\t\t\theight={420}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n\nexport default GamePieces;\n","import styled from \"styled-components\";\n\nexport const GameContainer = styled.div`\n\tdisplay: flex\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n`;\nexport const Score = styled.p`\n\tcolor: #1e88e5;\n\tfont-size: 24px;\n`;\nexport const HighScore = styled.p`\n\tcolor: #e74c3c;\n\tfont-size: 18px;\n`;\n\nexport const GameOver = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: center;\n\tcolor: #e74c3c;\n\tfont-size: 24px;\n\tmargin-top: 20px;\n\tul {\n\t\tpadding: 0;\n\t}\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectGameIsLoading = state =>\n\tstate.game.isLoading;\n\nexport const selectError = state => state.game.error;\n\nexport const selectGame = state => state.game.items;\n\nexport const selectRecord = createSelector(\n\t[selectGame],\n\titems => {\n\t\treturn (\n\t\t\titems.length > 0 &&\n\t\t\titems\n\t\t\t\t.filter(el => el.high_score > 0)\n\t\t\t\t.sort((a, b) =>\n\t\t\t\t\ta.high_score < b.high_score ? 1 : -1,\n\t\t\t\t)\n\t\t);\n\t},\n);\n","import GamePieces from \"components/GamePieces/GamePieces\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n\tGameContainer,\n\tGameOver,\n\tHighScore,\n\tScore,\n} from \"./GameState.styled\";\n\nimport { updateResult } from \"redux/game/operations\";\nimport { selectUser } from \"redux/auth/selectors\";\nimport { selectRecord } from \"redux/game/selectors\";\n\nconst GameState = () => {\n\tconst dispatch = useDispatch();\n\tconst [score, setScore] = useState(0);\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [collisionType, setCollisionType] = useState(null);\n\tconst { high_score } = useSelector(selectUser);\n\tconst [count, setCount] = useState(high_score);\n\tconst items = useSelector(selectRecord);\n\n\tconst handleGameOver = type => {\n\t\tsetGameOver(true);\n\n\t\tif (score > count) {\n\t\t\tdispatch(updateResult(score));\n\t\t\tsetCount(score);\n\t\t}\n\n\t\tsetCollisionType(type);\n\t};\n\n\tconst handleResetGame = () => {\n\t\tsetScore(0);\n\t\tsetGameOver(false);\n\t};\n\n\tuseEffect(() => {\n\t\tconst handleKeyPress = e => {\n\t\t\tif (gameOver && e.key === \"Enter\") {\n\t\t\t\thandleResetGame();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener(\"keydown\", handleKeyPress);\n\t}, [gameOver]);\n\n\treturn (\n\t\t<GameContainer>\n\t\t\t<Score className=\"score\">Score: {score}</Score>\n\t\t\t<HighScore>High Score: {count}</HighScore>\n\t\t\t{gameOver && (\n\t\t\t\t<GameOver>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tGame Over!{\" \"}\n\t\t\t\t\t\t{collisionType === \"wall\"\n\t\t\t\t\t\t\t? \"You Hit the wall\"\n\t\t\t\t\t\t\t: \"You Ate yourself\"}\n\t\t\t\t\t\t!\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Press Enter to reset the game</p>\n\t\t\t\t\t<p>Records</p>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{items.map(({ id, name, high_score }) => (\n\t\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t{name}:{high_score}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</GameOver>\n\t\t\t)}\n\t\t\t{!gameOver && (\n\t\t\t\t<GamePieces\n\t\t\t\t\tscore={score}\n\t\t\t\t\tsetScore={setScore}\n\t\t\t\t\tonGameOver={type => handleGameOver(type)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</GameContainer>\n\t);\n};\n\nexport default GameState;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n","import GameState from \"components/GameState/GameState\";\nimport { Wrapper } from \"./Game.stayled\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchResults } from \"redux/game/operations\";\n\nconst Game = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchResults());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<GameState />\n\t\t</Wrapper>\n\t);\n};\n\nexport default Game;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","GameCanvas","_templateObject3","_ref","score","setScore","onGameOver","_useState","useState","_useState2","_slicedToArray","pause","setPause","canvasRef","useRef","SNAKE_SPEED","_useState3","x","y","_useState4","apple","setApple","_useState5","_useState6","snake","setSnake","_useState7","_useState8","direction","setDirection","_useState9","_useState10","speed","setSpeed","_useState11","_useState12","count","setCount","i","useEffect","canvas","current","ctx","getContext","newWindow","callBeck","window","addEventListener","removeWindow","removeEventListener","takeBreak","e","key","handleWallCollision","snakeHead","width","height","handleBodyCollision","newSnake","length","handleAppleCollision","Math","floor","random","push","handleKeyPress","intervale","setInterval","clearRect","forEach","snakePart","beginPath","rect","fillStyle","fill","closePath","prevSnake","_toConsumableArray","clearInterval","_jsxs","children","_jsx","ref","GameContainer","Score","HighScore","GameOver","_templateObject4","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","equals","entry","get","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","selectRecord","state","game","items","filter","el","high_score","sort","dispatch","useDispatch","gameOver","setGameOver","collisionType","setCollisionType","useSelector","selectUser","className","id","GamePieces","type","updateResult","handleGameOver","fetchResults","GameState"],"sourceRoot":""}