{"version":3,"file":"static/js/930.6aa4dae2.chunk.js","mappings":"6PAGaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mJAWpBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yEAMpBG,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,gKAYrBM,EAAST,EAAAA,GAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,qU,mBCpB7BQ,EAAgB,CACrBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGLC,EAASC,EAAAA,KAAaC,MAAM,CACjCL,KAAMI,EAAAA,KAAaE,WACnBL,MAAOG,EAAAA,KAAaH,QAAQK,WAC5BJ,SAAUE,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIF,aAG1BG,EAAe,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACCC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACCF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACNhB,cAAeA,EACfiB,SATkB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC/BT,GAASU,EAAAA,EAAAA,IAAOH,IAChBE,GACD,EAOGE,iBAAkBlB,EAAOW,UAEzBQ,EAAAA,EAAAA,MAACnC,EAAK,CAACoC,aAAa,MAAKT,SAAA,EACxBQ,EAAAA,EAAAA,MAAC9B,EAAK,CAAAsB,SAAA,CAAC,aAENF,EAAAA,EAAAA,KAAClB,EAAK,CACL8B,KAAK,OACLxB,KAAK,OACLyB,MAAM,yIACNC,YAAY,oBAEbd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC3B,KAAK,OAAO4B,UAAU,YAErCN,EAAAA,EAAAA,MAAC9B,EAAK,CAAAsB,SAAA,CAAC,SAENF,EAAAA,EAAAA,KAAClB,EAAK,CACL8B,KAAK,QACLxB,KAAK,QACLyB,MAAM,oLACNC,YAAY,qBAEbd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC3B,KAAK,QAAQ4B,UAAU,YAEtCN,EAAAA,EAAAA,MAAC9B,EAAK,CAAAsB,SAAA,CAAC,YAENF,EAAAA,EAAAA,KAAClB,EAAK,CACL8B,KAAK,WACLxB,KAAK,WACLyB,MAAM,wJACNC,YAAY,wBAEbd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAAC3B,KAAK,WAAW4B,UAAU,YAEzChB,EAAAA,EAAAA,KAACf,EAAM,CAAC2B,KAAK,SAAQV,SAAC,mBAK3B,EC5DA,EAXiB,WAChB,IAAQe,GAAcC,EAAAA,EAAAA,KAAdD,UACR,OACCP,EAAAA,EAAAA,MAAAT,EAAAA,SAAA,CAAAC,SAAA,EACCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBACPF,EAAAA,EAAAA,KAACH,EAAY,IACZoB,IAAajB,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,MAGxB,C","sources":["components/RegisterForm/RegisterForm.styles.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\n\nexport const Forma = styled(Form)`\n\twidth: 360px;\n\n\tmargin: 0 auto;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const Label = styled.label`\n\tdisplay: block;\n\tmargin-bottom: 16px;\n\tfont-size: 14px;\n`;\n\nexport const Input = styled(Field)`\n\tdisplay: block;\n\twidth: 320px;\n\tmargin-top: 8px;\n\tpadding: 4px 8px;\n\n\tborder: 0;\n\tborder-bottom: 1px solid #42a5f5;\n\n\toutline: none;\n`;\n\nexport const Button = styled.button`\n\tpadding: 8px 16px;\n\n\tcolor: white;\n\tborder: 0;\n\n\tborder-radius: 8px;\n\ttext-decoration: none;\n\tbackground-color: #1e88e5;\n\ttransition: background-color 1000ms\n\t\tcubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: #212121;\n\t\toutline: none;\n\t\tbackground-color: #bbdefb;\n\t}\n`;\n","import { useDispatch } from \"react-redux\";\nimport { signUp } from \"redux/auth/operations\";\nimport React from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport {\n\tButton,\n\tForma,\n\tInput,\n\tLabel,\n} from \"./RegisterForm.styles\";\nimport * as yup from \"yup\";\n\nconst initialValues = {\n\tname: \"\",\n\temail: \"\",\n\tpassword: \"\",\n};\n\nconst schema = yup.object().shape({\n\tname: yup.string().required(),\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(6).max(16).required(),\n});\n\nexport const RegisterForm = () => {\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = (values, { resetForm }) => {\n\t\tdispatch(signUp(values));\n\t\tresetForm();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tvalidationSchema={schema}\n\t\t\t>\n\t\t\t\t<Forma autoComplete=\"off\">\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tUser name\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\ttitle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\t\tplaceholder=\"Enter name ...\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage name=\"name\" component=\"div\" />\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tEmail\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\ttitle=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n\t\t\t\t\t\t\tplaceholder=\"Enter email ...\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" />\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Label>\n\t\t\t\t\t\tPassword\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\ttitle=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n\t\t\t\t\t\t\tplaceholder=\"Enter password ...\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ErrorMessage name=\"password\" component=\"div\" />\n\t\t\t\t\t</Label>\n\t\t\t\t\t<Button type=\"submit\">Register</Button>\n\t\t\t\t</Forma>\n\t\t\t</Formik>\n\t\t</>\n\t);\n};\n","import { Loader } from \"components/Loader/Loader\";\nimport { useAuth } from \"hooks\";\nimport { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nconst Register = () => {\n\tconst { isLoading } = useAuth();\n\treturn (\n\t\t<>\n\t\t\t<title>Registration</title>\n\t\t\t<RegisterForm />\n\t\t\t{isLoading && <Loader />}\n\t\t</>\n\t);\n};\n\nexport default Register;\n"],"names":["Forma","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","Field","_templateObject3","Button","_templateObject4","initialValues","name","email","password","schema","yup","shape","required","min","max","RegisterForm","dispatch","useDispatch","_jsx","_Fragment","children","Formik","onSubmit","values","_ref","resetForm","signUp","validationSchema","_jsxs","autoComplete","type","title","placeholder","ErrorMessage","component","isLoading","useAuth","Loader"],"sourceRoot":""}